{"version":3,"sources":["webpack:///./src/app/configuracoes/entrega/entrega.module.ts","webpack:///./src/app/configuracoes/entrega/entrega.page.html","webpack:///./src/app/configuracoes/entrega/entrega.page.scss","webpack:///./src/app/configuracoes/entrega/entrega.page.ts"],"names":[],"mappings":"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","file":"entrega-entrega-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EntregaPage } from './entrega.page';\r\nimport { ServicesModule } from '../../services/services.module';\r\nimport { BrMaskerModule } from 'brmasker-ionic-3';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntregaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    ServicesModule,\r\n    BrMaskerModule\r\n  ],\r\n  declarations: [EntregaPage]\r\n})\r\nexport class EntregaPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>entrega(incompleto)</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content >\\r\\n  <ion-list  >\\r\\n    <!-- AREA DE INSERT -->\\r\\n      \\r\\n          <ion-list >\\r\\n                \\r\\n            <ion-item  color=\\\"red\\\" [ngStyle]=\\\"{'background-color':cepNovoColor}\\\" >\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"{{ cepNovoColor }}\\\" id=\\\"CEP\\\">CEP</ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"cepNovo\\\" color=\\\"{{ cepNovoColor }}\\\"\\r\\n              (change)=\\\"cepNovo = mask(cepNovo)\\\"\\r\\n              name=\\\"cepNovo\\\" maxlength=\\\"8\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            \\r\\n            <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Numero da residencia</ion-label>\\r\\n            <ion-input value=\\\"\\\" type=\\\"text\\\" formControlName=\\\"numeroResidencialNovo\\\"></ion-input>\\r\\n            </ion-item>\\r\\n              <ion-button \\r\\n              expand=\\\"full\\\" (click)=\\\"InserirDadosDeEntregaNovos()\\\"> \\r\\n                  Adicionar \\r\\n              </ion-button> \\r\\n          </ion-list>\\r\\n          \\r\\n          \\r\\n        \\r\\n        \\r\\n    <ion-list-header>Selecione um CEP para editar</ion-list-header>\\r\\n    <!-- AREA DE UPDATE OU DELETE -->\\r\\n    <ion-item>\\r\\n      <ion-label>CEPs registrados</ion-label>\\r\\n      <ion-select value=\\\"brown\\\" [ngModel]=\\\"LocalizacaoSelecionado\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" (change)=CepSelecionado()>\\r\\n        <ion-item *ngFor=\\\"let item of ListaCep\\\">\\r\\n          <ion-select-option \\r\\n            value=\\\"{{ item.cep }}\\\">\\r\\n            CEP:{{ item.cep }} / Residencias:{{ item.residencia }}\\r\\n          </ion-select-option>\\r\\n        </ion-item>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <!-- FORMULÁRIO -->\\r\\n    <form [formGroup]=\\\"formulario2\\\" id=\\\"Form\\\" *ngIf=\\\"Edicao\\\">\\r\\n        <ion-list>\\r\\n            <ion-item *ngFor=\\\"let item of DadosCEP\\\">\\r\\n              \\r\\n              <ion-item>\\r\\n              <ion-label position=\\\"floating\\\">CEP</ion-label>\\r\\n              <ion-input value=\\\"{{ item.cep }}\\\" type=\\\"text\\\" formControlName=\\\"cepAtualizado\\\"></ion-input>\\r\\n              </ion-item>\\r\\n              \\r\\n              <ion-item>\\r\\n              <ion-label position=\\\"floating\\\">Numero da residencia</ion-label>\\r\\n              <ion-input value=\\\"{{ item.residencia }}\\\" type=\\\"text\\\" formControlName=\\\"numeroResidencialAtualizado\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n        \\r\\n        <!-- LOGAR -->\\r\\n        <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"light\\\" (click)=\\\"InserirDadosDeEntrega()\\\")> \\r\\n            Alterar \\r\\n        </ion-button> \\r\\n        <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"light\\\" > \\r\\n            Remover \\r\\n        </ion-button> \\r\\n      \\r\\n      </form>\\r\\n  \\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\"","module.exports = \"#CEP {\\n  background-color: red;\\n  color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29uZmlndXJhY29lcy9lbnRyZWdhL0M6XFxVc2Vyc1xcUEMgQ0FTQVxcRGVza3RvcFxcSW9uaWNcXGlLaXRjaGVuLWlvbmljL3NyY1xcYXBwXFxjb25maWd1cmFjb2VzXFxlbnRyZWdhXFxlbnRyZWdhLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFvQjtFQUNwQixVQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb25maWd1cmFjb2VzL2VudHJlZ2EvZW50cmVnYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjQ0VQe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjpyZWQ7XHJcbiAgICBjb2xvcjpyZWQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MascaraService } from '../../services/mascara.service';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, NumericValueAccessor } from '@ionic/angular';\r\nimport { ToastService } from '../../toast.service';\r\nimport * as firebase from 'firebase';\r\nimport { ChildActivationEnd } from '@angular/router';\r\nimport { CartaoPage } from '../../pagamento/cartao/cartao.page';\r\n\r\n@Component({\r\n  selector: 'app-entrega',\r\n  templateUrl: './entrega.page.html',\r\n  styleUrls: ['./entrega.page.scss'],\r\n})\r\nexport class EntregaPage implements OnInit {\r\n\r\n  formulario:FormGroup;\r\n  formulario2:FormGroup;\r\n  db;\r\n  constructor(private mascara:MascaraService,\r\n    private usuario:UsuarioService,\r\n    private formBuilder:FormBuilder,\r\n    private toastCtrl:ToastService,\r\n    //private storage:Storage\r\n    ) {\r\n      this.db=firebase.database();\r\n    }\r\n  ListaCep;\r\n  LocalizacaoSelecionado;\r\n  userId;\r\n  LocalId;\r\n  DadosCEP;\r\n  Edicao:boolean;\r\n  cepNovo:string='';\r\n  numeroResidencialNovo;\r\n  async ngOnInit() {\r\n    \r\n    //this.toastEntrega(\"AAAA\");\r\n    /*var id;\r\n      /*await this.storage.get('id').then((value) => {\r\n        id=Number(value);\r\n        console.log(value);\r\n      });\r\n    this.userId=1;\r\n    this.usuario.AddCepOfUser(1,\r\n      \"55555555\",\r\n      \"11\");\r\n    \r\n    //this.ListaCep=[];\r\n    //this.ListaCep=[{cep:\"AAA\",residencia:\"AAA\"}];\r\n    this.ListaCep=[await this.usuario.getCEPByUserId(1)];*/\r\n    //this.toastEntrega(this.ListaCep[0].cep);\r\n    this.formulario = this.formBuilder.group({\r\n      cepNovo:['', [Validators.required]],\r\n      numeroResidencialNovo:['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n    \r\n  }\r\n  mask(v){\r\n    //this.toastEntrega(\"V \"+v);\r\n    return this.mascara.format(v,'cep');\r\n  }\r\n  cepNovoColor=\"\";\r\n  async InserirDadosDeEntregaNovos(){//Insert\r\n    var cep=[];\r\n    var numeroResidencial=[];\r\n\r\n    this.db.ref('usuario')\r\n      .child(firebase.auth().currentUser.uid)\r\n        .child('dados')\r\n          .child('LocalDeEntregua')\r\n            .child('cep').once('value').then(snapshot => {\r\n              snapshot.forEach(userResult => {\r\n                if(userResult.val()){\r\n                  cep.push(userResult.val());console.log(userResult.val());\r\n                }\r\n                \r\n                //numeroResidencial.push(userResult.val().NumeroResidencia);\r\n              //Pega cada pessoa por vez\r\n              })\r\n            cep.push(this.cepNovo);\r\n            this.db.ref('usuario')\r\n              .child(firebase.auth().currentUser.uid)\r\n              .child('LocalDeEntregua').child('cep').set(cep);\r\n              this.toastCtrl.Mensagem(\"CEP adicionado\");\r\n    });\r\n    numeroResidencial.push(this.numeroResidencialNovo);\r\n    \r\n\r\n    \r\n    this.db.ref('usuario')\r\n      .child(firebase.auth().currentUser.uid)\r\n        .child('LocalDeEntregua').set(numeroResidencial);\r\n\r\n    this.Edicao=false;\r\n    this.toastCtrl.Mensagem(\"Adicionado com sucesso\");\r\n    /*\r\n    let quantidade=await this.usuario.QuantidadeDeCepsCadastrados(this.userId);\r\n    let inexistente:boolean=await this.usuario.LocalizacaoAindaNaoExistente(this.cepNovo,this.numeroResidencialNovo);\r\n    this.FormatoCepConsitente();\r\n    quantidade=1;\r\n    inexistente=true;\r\n    //this.toastEntrega(this.CepInvalido);\r\n    if(this.CepInvalido){\r\n      this.cepNovoColor=\"rgb(255, 153, 153)\";\r\n      this.toastEntrega(\"CEP tem que ter 8 caracteres\");\r\n    }else if(quantidade>4){\r\n      this.cepNovoColor=\"rgb(255, 153, 153)\";\r\n      this.toastEntrega(\"Limite de quantidade de ceps atingido\");\r\n\r\n    }else if(!inexistente){\r\n      this.cepNovoColor=\"rgb(255, 153, 153)\";\r\n      this.toastEntrega(\"Cep ja existente na sua conta\");\r\n\r\n    }else{\r\n      this.cepNovoColor=\"\";\r\n      /*this.usuario.AddCepOfUser(\r\n        this.userId,\r\n        this.formulario.get('cepNovo').value,\r\n        this.formulario.get('numeroResidencialNovo').value);*/\r\n        \r\n    }\r\n    \r\n  \r\n  CepInvalido;//variavel vai para directive\r\n  FormatoCepConsitente(){\r\n    let cep=this.cepNovo.split(\"\");\r\n    if(cep.length<8){\r\n      this.CepInvalido=true;\r\n    }else{\r\n      this.CepInvalido=false;\r\n    }\r\n  }\r\n  CepSelecionado(){//update\r\n    this.DadosCEP=[];\r\n    this.Edicao=true;\r\n    //this.DadosCEP=this.usuario.DadosDeEntrega(this.LocalizacaoSelecionado);\r\n    this.LocalId=this.DadosCEP[0].id;\r\n\r\n\r\n  }\r\n  UpdateCEP(){//update\r\n    /*this.usuario.UpdateCEP(this.LocalId,\r\n      this.userId,\r\n      this.formulario.get('cepAtualizado').value,\r\n      this.formulario.get('numeroResidencialAtualizado').value)*/\r\n  }\r\n  DeleteCEP(){\r\n\r\n  }\r\n  \r\n\r\n}\r\n"],"sourceRoot":""}